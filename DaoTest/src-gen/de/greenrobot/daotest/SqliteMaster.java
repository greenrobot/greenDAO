package de.greenrobot.daotest;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table SQLITE_MASTER.
 */
public class SqliteMaster {

    private String type;
    private String name;
    private String tableName;
    private Long rootpage;
    private String sql;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public SqliteMaster() {
    }

    public SqliteMaster(String type, String name, String tableName, Long rootpage, String sql) {
        this.type = type;
        this.name = name;
        this.tableName = tableName;
        this.rootpage = rootpage;
        this.sql = sql;
    }

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getTableName() {
        return tableName;
    }

    public void setTableName(String tableName) {
        this.tableName = tableName;
    }

    public Long getRootpage() {
        return rootpage;
    }

    public void setRootpage(Long rootpage) {
        this.rootpage = rootpage;
    }

    public String getSql() {
        return sql;
    }

    public void setSql(String sql) {
        this.sql = sql;
    }


	public static Builder builder() {
		return new Builder();
	}
	
	public static Builder builder(SqliteMaster sqliteMaster) {
		return new Builder(sqliteMaster);
	}

	public static class Builder {

    	private SqliteMaster sqliteMaster;
    	
    	public Builder(){
    		this.sqliteMaster = new SqliteMaster();
    	}
    	
    	public Builder(SqliteMaster sqliteMaster){
    		this.sqliteMaster = sqliteMaster;
    	}
    	
    	public Builder type(String type) {
    		sqliteMaster.setType(type);
        	return this;
    	}

    	public Builder name(String name) {
    		sqliteMaster.setName(name);
        	return this;
    	}

    	public Builder tableName(String tableName) {
    		sqliteMaster.setTableName(tableName);
        	return this;
    	}

    	public Builder rootpage(Long rootpage) {
    		sqliteMaster.setRootpage(rootpage);
        	return this;
    	}

    	public Builder sql(String sql) {
    		sqliteMaster.setSql(sql);
        	return this;
    	}

		public SqliteMaster build(){
			return sqliteMaster;
		}
	}

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}